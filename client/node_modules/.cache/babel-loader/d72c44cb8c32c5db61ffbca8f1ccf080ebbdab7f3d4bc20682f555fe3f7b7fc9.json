{"ast":null,"code":"var _jsxFileName = \"E:\\\\itransition_course\\\\course_project\\\\client\\\\src\\\\components\\\\TagsInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst fetchTags = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/api/collections/tags`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching tags:', error);\n    return [];\n  }\n};\nconst TagsInput = ({\n  tags,\n  setTags\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState('');\n  useEffect(() => {\n    fetchTags().then(tags => {\n      setSuggestions(tags.map(tag => ({\n        name: tag.name\n      })));\n      console.log('tags:', tags);\n    });\n  }, []);\n  const onChange = (event, {\n    newValue\n  }) => {\n    setValue(newValue);\n  };\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    setSuggestions(allSuggestions.filter(tag => tag.name.toLowerCase().slice(0, inputLength) === inputValue));\n  };\n  const onSuggestionSelected = (event, {\n    suggestion\n  }) => {\n    setTags([...tags, suggestion.name]);\n    setValue('');\n  };\n  const getSuggestionValue = suggestion => suggestion.name;\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n  const inputProps = {\n    placeholder: 'Type a tag',\n    value,\n    onChange\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: () => setSuggestions(allSuggestions),\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      onSuggestionSelected: onSuggestionSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-secondary me-2\",\n        children: tag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TagsInput, \"HzfdsFp392eKOSiW+eYz+bj4aas=\");\n_c = TagsInput;\nexport default TagsInput;\nvar _c;\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","jsxDEV","_jsxDEV","apiUrl","process","env","REACT_APP_API_URL","fetchTags","response","fetch","ok","Error","data","json","error","console","TagsInput","tags","setTags","_s","suggestions","setSuggestions","value","setValue","then","map","tag","name","log","onChange","event","newValue","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","allSuggestions","filter","slice","onSuggestionSelected","suggestion","getSuggestionValue","renderSuggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","placeholder","onSuggestionsClearRequested","index","className","_c","$RefreshReg$"],"sources":["E:/itransition_course/course_project/client/src/components/TagsInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchTags = async () => {\r\n  try {\r\n    const response = await fetch(`${apiUrl}/api/collections/tags`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching tags:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst TagsInput = ({ tags, setTags }) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTags().then((tags) => {\r\n      setSuggestions(tags.map(tag => ({ name: tag.name })));\r\n      console.log('tags:', tags);\r\n    });\r\n    \r\n  }, []);\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    setSuggestions(\r\n      allSuggestions.filter(tag =>\r\n        tag.name.toLowerCase().slice(0, inputLength) === inputValue\r\n      )\r\n    );\r\n  };\r\n\r\n  const onSuggestionSelected = (event, { suggestion }) => {\r\n    setTags([...tags, suggestion.name]);\r\n    setValue('');\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.name;\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    <div>{suggestion.name}</div>\r\n  );\r\n\r\n  const inputProps = {\r\n    placeholder: 'Type a tag',\r\n    value,\r\n    onChange,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={() => setSuggestions(allSuggestions)}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n        onSuggestionSelected={onSuggestionSelected}\r\n      />\r\n      <div>\r\n        {tags.map((tag, index) => (\r\n          <span key={index} className=\"badge bg-secondary me-2\">\r\n            {tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}