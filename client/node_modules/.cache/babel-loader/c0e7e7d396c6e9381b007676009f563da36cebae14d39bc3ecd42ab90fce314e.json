{"ast":null,"code":"var _jsxFileName = \"E:\\\\itransition_course\\\\course_project\\\\client\\\\src\\\\components\\\\TagsInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n\n/*const fetchTags = async () => {\r\n  try {\r\n    const response = await fetch(`${apiUrl}/api/collections/tags`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching tags:', error);\r\n    return [];\r\n  }\r\n};*/\n\nconst TagsInput = ({\n  tags,\n  setTags\n}) => {\n  _s();\n  const [allSuggestions, setAllSuggestions] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState('');\n  useEffect(() => {\n    fetchTags().then(tags => {\n      setAllSuggestions(tags);\n      setSuggestions(tags);\n      console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\n    });\n  }, []);\n  const onChange = (event, {\n    newValue\n  }) => {\n    setValue(newValue);\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\n  };\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    const filteredSuggestions = allSuggestions.filter(tags => tags.name.toLowerCase().slice(0, inputLength) === inputValue);\n    setSuggestions(filteredSuggestions);\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\n  };\n  const onSuggestionSelected = (event, {\n    suggestion\n  }) => {\n    if (!tags.includes(suggestion.name)) {\n      setTags([...tags, suggestion.name]);\n    }\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\n    setValue('');\n  };\n  const getSuggestionValue = suggestion => suggestion.name;\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n  const inputProps = {\n    placeholder: 'Tags',\n    value,\n    onChange\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: () => setSuggestions(allSuggestions) // Возвращаем все исходные теги\n      ,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      onSuggestionSelected: onSuggestionSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-secondary me-2\",\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(TagsInput, \"fTQGiGw1Oy9oxYryxI9nvDOSZyY=\");\n_c = TagsInput;\nexport default TagsInput;\nvar _c;\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","jsxDEV","_jsxDEV","apiUrl","process","env","REACT_APP_API_URL","TagsInput","tags","setTags","_s","allSuggestions","setAllSuggestions","suggestions","setSuggestions","value","setValue","fetchTags","then","console","log","onChange","event","newValue","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filteredSuggestions","filter","name","slice","onSuggestionSelected","suggestion","includes","getSuggestionValue","renderSuggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","placeholder","onSuggestionsClearRequested","map","tag","className","id","_c","$RefreshReg$"],"sources":["E:/itransition_course/course_project/client/src/components/TagsInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\n/*const fetchTags = async () => {\r\n  try {\r\n    const response = await fetch(`${apiUrl}/api/collections/tags`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching tags:', error);\r\n    return [];\r\n  }\r\n};*/\r\n\r\nconst TagsInput = ({ tags, setTags }) => {\r\n  const [allSuggestions, setAllSuggestions] = useState([]); \r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTags().then((tags) => {\r\n      setAllSuggestions(tags); \r\n      setSuggestions(tags); \r\n      console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\r\n    });\r\n  }, []);\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    const filteredSuggestions = allSuggestions.filter(tags =>\r\n      tags.name.toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n\r\n    setSuggestions(filteredSuggestions);\r\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\r\n  };\r\n\r\n  const onSuggestionSelected = (event, { suggestion }) => {\r\n    if (!tags.includes(suggestion.name)) {\r\n      setTags([...tags, suggestion.name]);\r\n    }\r\n    console.log('onSuggestionsFetchRequested 1 tags:', tags, allSuggestions, suggestions);\r\n    setValue(''); \r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.name;\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    <div>{suggestion.name}</div>\r\n  );\r\n\r\n  const inputProps = {\r\n    placeholder: 'Tags',\r\n    value,\r\n    onChange,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={() => setSuggestions(allSuggestions)} // Возвращаем все исходные теги\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n        onSuggestionSelected={onSuggestionSelected}\r\n      />\r\n      <div>\r\n        {tags.map((tag) => (\r\n          <span key={tag.id} className=\"badge bg-secondary me-2\">\r\n            {tag.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}