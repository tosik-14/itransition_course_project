{"ast":null,"code":"var _jsxFileName = \"E:\\\\itransition_course\\\\course_project\\\\client\\\\src\\\\components\\\\main_content\\\\CloudTags.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './mainPage.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { getPopularTags } from '../utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloudTags = () => {\n  _s();\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const quantity = 20;\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        console.log('step 1');\n        const data = await getPopularTags(quantity);\n        console.log('fetched tags:', data); // Лог данных после их получения\n        setTags(data || []); // Защита от undefined\n      } catch (err) {\n        console.error('Error fetching tags:', err); // Лог ошибки\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTags();\n    console.log('cloud tags: ', tags);\n  }, []);\n  const getFontSize = count => {\n    if (count > 4) return '2rem';\n    if (count > 2) return '1.5rem';\n    return '1rem';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag-cloud\",\n    children: tags && tags.length > 0 && tags.filter(tag => tag.count > 1).map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: getFontSize(tag.count),\n        margin: '0.5rem',\n        display: 'inline-block'\n      },\n      className: \"tag\",\n      children: tag.name\n    }, tag.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CloudTags, \"a541+OVS2KxkiasYdHFOPbM+8JQ=\");\n_c = CloudTags;\nexport default CloudTags;\nvar _c;\n$RefreshReg$(_c, \"CloudTags\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","getPopularTags","jsxDEV","_jsxDEV","CloudTags","_s","tags","setTags","loading","setLoading","error","setError","quantity","fetchTags","console","log","data","err","getFontSize","count","className","children","length","filter","tag","map","style","fontSize","margin","display","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/itransition_course/course_project/client/src/components/main_content/CloudTags.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './mainPage.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { getPopularTags } from '../utility';\r\n\r\nconst CloudTags = () => {\r\n  const [tags, setTags] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const quantity = 20;\r\n\r\n  useEffect(() => {\r\n    const fetchTags = async () => {\r\n      try {\r\n        console.log('step 1');\r\n        const data = await getPopularTags(quantity);\r\n        console.log('fetched tags:', data);  // Лог данных после их получения\r\n        setTags(data || []);  // Защита от undefined\r\n      } catch (err) {\r\n        console.error('Error fetching tags:', err); // Лог ошибки\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTags();\r\n    console.log('cloud tags: ',tags);\r\n  }, []);\r\n\r\n\r\n  const getFontSize = (count) => {\r\n    if (count > 4) return '2rem';\r\n    if (count > 2) return '1.5rem';\r\n    return '1rem';\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"tag-cloud\">\r\n      {tags && tags.length > 0 && tags\r\n        .filter(tag => tag.count > 1) \r\n        .map((tag) => (\r\n        <span\r\n          key={tag.id}\r\n          style={{ fontSize: getFontSize(tag.count), margin: '0.5rem', display: 'inline-block' }}\r\n          className=\"tag\"\r\n        >\r\n          {tag.name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CloudTags;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAO,sCAAsC;AAC7C,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMe,QAAQ,GAAG,EAAE;EAEnBd,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrB,MAAMC,IAAI,GAAG,MAAMf,cAAc,CAACW,QAAQ,CAAC;QAC3CE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,IAAI,CAAC,CAAC,CAAE;QACrCT,OAAO,CAACS,IAAI,IAAI,EAAE,CAAC,CAAC,CAAE;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEO,GAAG,CAAC,CAAC,CAAC;QAC5CN,QAAQ,CAACM,GAAG,CAAC;MACf,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;IACXC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACT,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMY,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,MAAM;IAC5B,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,QAAQ;IAC9B,OAAO,MAAM;EACf,CAAC;EAID,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBf,IAAI,IAAIA,IAAI,CAACgB,MAAM,GAAG,CAAC,IAAIhB,IAAI,CAC7BiB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACL,KAAK,GAAG,CAAC,CAAC,CAC5BM,GAAG,CAAED,GAAG,iBACTrB,OAAA;MAEEuB,KAAK,EAAE;QAAEC,QAAQ,EAAET,WAAW,CAACM,GAAG,CAACL,KAAK,CAAC;QAAES,MAAM,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAe,CAAE;MACvFT,SAAS,EAAC,KAAK;MAAAC,QAAA,EAEdG,GAAG,CAACM;IAAI,GAJJN,GAAG,CAACO,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}